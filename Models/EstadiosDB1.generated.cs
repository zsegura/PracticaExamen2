//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1573, 1591

using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;

using LinqToDB;
using LinqToDB.Common;
using LinqToDB.Configuration;
using LinqToDB.Data;
using LinqToDB.Mapping;

namespace DataModels
{
	/// <summary>
	/// Database       : Estadios
	/// Data Source    : IN3114
	/// Server Version : 16.00.1135
	/// </summary>
	public partial class EstadiosDB : LinqToDB.Data.DataConnection
	{
		public ITable<TblCiudad>          TblCiudads          { get { return this.GetTable<TblCiudad>(); } }
		public ITable<TblEstadio>         TblEstadios         { get { return this.GetTable<TblEstadio>(); } }
		public ITable<TblPai>             TblPais             { get { return this.GetTable<TblPai>(); } }
		public ITable<VwEstadioCiudadPai> VwEstadioCiudadPais { get { return this.GetTable<VwEstadioCiudadPai>(); } }

		public EstadiosDB()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public EstadiosDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		public EstadiosDB(DataOptions options)
			: base(options)
		{
			InitDataContext();
			InitMappingSchema();
		}

		public EstadiosDB(DataOptions<EstadiosDB> options)
			: base(options.Options)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext  ();
		partial void InitMappingSchema();
	}

	[Table(Schema="dbo", Name="TBL_CIUDAD")]
	public partial class TblCiudad
	{
		[Column("id_Ciudad"),    PrimaryKey, Identity] public int    IdCiudad     { get; set; } // int
		[Column("id_Pais"),      NotNull             ] public int    IdPais       { get; set; } // int
		[Column("codigoCiudad"), NotNull             ] public int    CodigoCiudad { get; set; } // int
		[Column("nombreCiudad"), NotNull             ] public string NombreCiudad { get; set; } // varchar(100)

		#region Associations

		/// <summary>
		/// FK_tbl_Ciudad_tbl_Pais (dbo.TBL_PAIS)
		/// </summary>
		[Association(ThisKey="IdPais", OtherKey="IdPais", CanBeNull=false)]
		public TblPai TblCiudadtblPai { get; set; }

		/// <summary>
		/// FK_tbl_Estadio_tbl_Ciudad_BackReference (dbo.TBL_ESTADIO)
		/// </summary>
		[Association(ThisKey="IdCiudad", OtherKey="IdCiudad", CanBeNull=true)]
		public IEnumerable<TblEstadio> TblEstadiotblCiudads { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="TBL_ESTADIO")]
	public partial class TblEstadio
	{
		[Column("id_Estadio"),       PrimaryKey, Identity] public int      IdEstadio        { get; set; } // int
		[Column("id_Ciudad"),        NotNull             ] public int      IdCiudad         { get; set; } // int
		[Column("nombre"),           NotNull             ] public string   Nombre           { get; set; } // varchar(100)
		[Column("capacidad"),        NotNull             ] public int      Capacidad        { get; set; } // int
		[Column("fechaInaguracion"), NotNull             ] public DateTime FechaInaguracion { get; set; } // date

		#region Associations

		/// <summary>
		/// FK_tbl_Estadio_tbl_Ciudad (dbo.TBL_CIUDAD)
		/// </summary>
		[Association(ThisKey="IdCiudad", OtherKey="IdCiudad", CanBeNull=false)]
		public TblCiudad TblEstadiotblCiudad { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="TBL_PAIS")]
	public partial class TblPai
	{
		[Column("id_Pais"),     PrimaryKey, Identity] public int    IdPais      { get; set; } // int
		[Column("codigo"),      NotNull             ] public int    Codigo      { get; set; } // int
		[Column("abreviatura"), NotNull             ] public string Abreviatura { get; set; } // varchar(10)
		[Column("nombre"),      NotNull             ] public string Nombre      { get; set; } // varchar(100)

		#region Associations

		/// <summary>
		/// FK_tbl_Ciudad_tbl_Pais_BackReference (dbo.TBL_CIUDAD)
		/// </summary>
		[Association(ThisKey="IdPais", OtherKey="IdPais", CanBeNull=true)]
		public IEnumerable<TblCiudad> TblCiudadtblPais { get; set; }

		#endregion
	}

	[Table(Schema="dbo", Name="VW_ESTADIO_CIUDAD_PAIS", IsView=true)]
	public partial class VwEstadioCiudadPai
	{
		[Column("id_Estadio"),   NotNull] public int    IdEstadio    { get; set; } // int
		[Column("nombre"),       NotNull] public string Nombre       { get; set; } // varchar(100)
		[Column("capacidad"),    NotNull] public int    Capacidad    { get; set; } // int
		[Column("id_Ciudad"),    NotNull] public int    IdCiudad     { get; set; } // int
		[Column("codigoCiudad"), NotNull] public int    CodigoCiudad { get; set; } // int
		[Column("nombreCiudad"), NotNull] public string NombreCiudad { get; set; } // varchar(100)
		[Column("id_Pais"),      NotNull] public int    IdPais       { get; set; } // int
		[Column("codigo"),       NotNull] public int    Codigo       { get; set; } // int
		[Column("abreviatura"),  NotNull] public string Abreviatura  { get; set; } // varchar(10)
		[Column("nombrePais"),   NotNull] public string NombrePais   { get; set; } // varchar(100)
	}

	public static partial class EstadiosDBStoredProcedures
	{
		#region SpInsertaEstadioCiudad

		public static int SpInsertaEstadioCiudad(this EstadiosDB dataConnection, int? @idCiudad, string @nombre, int? @capacidad)
		{
			var parameters = new []
			{
				new DataParameter("@id_Ciudad", @idCiudad,  LinqToDB.DataType.Int32),
				new DataParameter("@nombre",    @nombre,    LinqToDB.DataType.VarChar)
				{
					Size = 100
				},
				new DataParameter("@capacidad", @capacidad, LinqToDB.DataType.Int32)
			};

			return dataConnection.ExecuteProc("[dbo].[SP_INSERTA_ESTADIO_CIUDAD]", parameters);
		}

		#endregion

		#region SpRetornaCiudadPorPais

		public static IEnumerable<SpRetornaCiudadPorPAISResult> SpRetornaCiudadPorPais(this EstadiosDB dataConnection, int? @idPais)
		{
			var parameters = new []
			{
				new DataParameter("@ID_PAIS", @idPais, LinqToDB.DataType.Int32)
			};

			return dataConnection.QueryProc<SpRetornaCiudadPorPAISResult>("[dbo].[SP_RETORNA_CIUDAD_POR_PAIS]", parameters);
		}

		public partial class SpRetornaCiudadPorPAISResult
		{
			[Column("id_Ciudad")  ] public int    Id_Ciudad   { get; set; }
			[Column("datosCiudad")] public string DatosCiudad { get; set; }
		}

		#endregion

		#region SpRetornaEstadioCiudadPais

		public static IEnumerable<SpRetornaEstadioCiudadPAISResult> SpRetornaEstadioCiudadPais(this EstadiosDB dataConnection)
		{
			return dataConnection.QueryProc<SpRetornaEstadioCiudadPAISResult>("[dbo].[SP_RETORNA_ESTADIO_CIUDAD_PAIS]");
		}

		public partial class SpRetornaEstadioCiudadPAISResult
		{
			[Column("id_Estadio")] public int    Id_Estadio  { get; set; }
			[Column("nombre")    ] public string Nombre      { get; set; }
			[Column("capacidad") ] public int    Capacidad   { get; set; }
			[Column("id_Ciudad") ] public int    Id_Ciudad   { get; set; }
			                       public string DatosCiudad { get; set; }
			[Column("id_Pais")   ] public int    Id_Pais     { get; set; }
			                       public string DatosPais   { get; set; }
		}

		#endregion

		#region SpRetornaPais

		public static IEnumerable<SpRetornaPAISResult> SpRetornaPais(this EstadiosDB dataConnection)
		{
			return dataConnection.QueryProc<SpRetornaPAISResult>("[dbo].[SP_RETORNA_PAIS]");
		}

		public partial class SpRetornaPAISResult
		{
			[Column("id_Pais")] public int    Id_Pais   { get; set; }
			                    public string DatosPais { get; set; }
		}

		#endregion
	}

	public static partial class TableExtensions
	{
		public static TblCiudad Find(this ITable<TblCiudad> table, int IdCiudad)
		{
			return table.FirstOrDefault(t =>
				t.IdCiudad == IdCiudad);
		}

		public static TblEstadio Find(this ITable<TblEstadio> table, int IdEstadio)
		{
			return table.FirstOrDefault(t =>
				t.IdEstadio == IdEstadio);
		}

		public static TblPai Find(this ITable<TblPai> table, int IdPais)
		{
			return table.FirstOrDefault(t =>
				t.IdPais == IdPais);
		}
	}
}
